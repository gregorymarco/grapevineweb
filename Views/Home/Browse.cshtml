@model IEnumerable<website.Models.Messages>

<link rel="stylesheet" href="~/css/browseStyles.css">

<div class="text-center">
    <h4>Messages within 1KM</h4>
</div>

<table>  
@foreach (var message in Model)
{ 
    <tr>
        <th>@message.Messagecontent</th>
    </tr>
}
</table>
<script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAkKrJfJS87ykqUJS06beWH1LAVBHnbLHk&callback=initMap&libraries=&v=weekly"
    defer
>
/*Nothing to be done about obscuring the API Key: Restrictions on this key to only work on requests from my domain is the best I can do
TODO: break maps code down from inline into smaller js files*/</script>
<style type="text/css">
    /* Set the size of the div element that contains the map */
    #map {
    height: 400px;
    /* The height is 400 pixels */
    width: 100%;
    /* The width is the width of the web page */
    }
</style>
<script>
    // Initialize and add the map
    function initMap() {
        const yourLocation = { lat: @ViewBag.lat, lng: @ViewBag.lng };
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 15,
            center: yourLocation,
        });
        const marker = new google.maps.Marker({
            position: yourLocation,
            map: map,
        });
        var messages = JSON.parse('@Html.Raw(Json.Serialize(Model))');
        messages.forEach(function(message){
            var infowindow = new google.maps.InfoWindow({
                content: message.messagecontent,
            });
            var marker = new google.maps.Marker({
                position: {lat: message.lat, lng: message.long},
                map,
                title:''
            });
            marker.addListener("click", () => {
                infowindow.open(map, marker);
            });
        }
        );
    }
</script>

<body>
    <div id="map"></div>
</body>

